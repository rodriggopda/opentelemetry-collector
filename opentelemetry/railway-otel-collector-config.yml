receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        cors:
          allowed_origins:
            - https://*.slatecast.dev
            - https://*.slatecast.io
            - https://*.slatecast.co
            - https://*.ginkgoo.dev
            - https://*.jasper.dev
          allowed_headers: 
            - "*"
          max_age: 7200      
        endpoint: 0.0.0.0:4318

exporters:
  # debug:
  #   verbosity: detailed

  # not working
  # prometheusremotewrite:
  #   endpoint: "${env:RAILWAY_PROMETHEUS_ENDPOINT}" # prometheus.railway.internal:9090/api/v1/write
  #   tls:
  #     insecure: true

  prometheus:
    endpoint: "0.0.0.0:8889"

  otlphttp/loki:
    endpoint: "${env:RAILWAY_LOKI_ENDPOINT}" # http://<loki-addr>:3100/otlp
    preferred_ip_version: ip4

  otlp/tempo:
    endpoint: "${env:RAILWAY_TEMPO_ENDPOINT}" # <tempo-addr>:4318
    tls:
      insecure: true
    preferred_ip_version: ip4

  # These two service have the same function with Tempo, no need to use all three.
  # zipkin:
  #   endpoint: "${env:RAILWAY_ZINPKIN_ENDPOINT}" # http://zipkin.railway.internal:9411/api/v2/spans
  #   format: proto

  # otlp/jaeger:
  #   endpoint: "${env:RAILWAY_JAEGER_ENDPOINT}" # jaeger.railway.internal:4317
  #   tls:
  #     insecure: true

processors:
  batch:

extensions:
  health_check:
  pprof:
    endpoint: :1888
  zpages:
    endpoint: :55679

service:
  extensions: [pprof, zpages, health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/tempo]
      # exporters: [zipkin, otlp/jaeger, otlp/tempo]
      # exporters: [zipkin, otlp/jaeger, otlp/tempo, debug]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheus]
      # exporters: [prometheusremotewrite, prometheus, debug]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp/loki]
